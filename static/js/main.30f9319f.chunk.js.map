{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAqCeA,MAhCf,SAAmBC,GACjB,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACE,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAC7CC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAG7C,+BACE,cAAC,IAAD,CACEH,UAAU,UACVU,KAAK,QACLC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAZlB,eAmB/B,OACA,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eCzBPmB,IAAQC,IAAIC,K,IAmFGC,E,kDAhFb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZD,E,wDAeNf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,8BAKPpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACC,KAAVA,EAAa,CACd,IAAMG,EAAS,GAAD,mBAAKR,KAAKL,MAAMtB,OAAhB,CAAuBgC,IACrCL,KAAKC,SAAS,CACZ5B,MAAMmC,EACNZ,YAAY,CACVf,KAAK,GACLF,IAAI,S,iCAMDA,GACT,IAAM8B,EAAgBT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAChDA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACZ5B,MAAOoC,M,gCAIH5B,EAAKF,GACb,IAAMN,EAAM2B,KAAKL,MAAMtB,MACvBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGdmB,KAAKC,SAAS,CACZ5B,MAAOA,M,+BAKT,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,aAC/BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACf,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAC7Be,WAAcY,KAAKZ,WACnBJ,UAAagB,KAAKhB,mB,GA1EV6B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30f9319f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ListItems.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props) {\r\n  const items = props.items;\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div className=\"list\" key={\"item.key\"}>\r\n        <p>\r\n          <input type=\"text\" id={item.key} value={item.text} \r\n          onChange={\r\n              (e) =>{\r\n                  props.setUpdate(e.target.value, item.key)\r\n              }\r\n          }/>\r\n          <span>\r\n            <FontAwesomeIcon\r\n              className=\"faicons\"\r\n              icon=\"trash\"\r\n              onClick={() => props.deleteItem(item.key)}\r\n            />\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n  return(\r\n  <div>\r\n      <FlipMove duration={300} easing=\"ease-in-out\">\r\n      {listItems}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItems;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ListItems from './ListItems';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem!==\"\"){\n      const newItems=[...this.state.items, newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => \n      item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n  }\n\n  setUpdate(text,key){\n    const items=this.state.items;\n    items.map(item=>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter Text\" \n            value={this.state.currentItem.text}\n            onChange={this.handleInput}/>\n            <button type=\"submit\">Add</button>\n          </form>\n        </header>\n        <ListItems items = {this.state.items}\n          deleteItem = {this.deleteItem}\n          setUpdate = {this.setUpdate}>\n        </ListItems>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}